openapi: 3.0.1
info:
  title: RBAC Manager API Docs
  description: RBAC Manager API Documentation
  version: v2
servers:
  - url: /rbacmanagement
paths:
  /api/v1/entities:
    post:
      tags:
        - Entity
      summary: This API is used for creation of entities for RBAC, with this user can ccreate new entities for management
      parameters:
        - name: bearer
          in: header
          description: provide valid JWT token here
          schema:
            type: string
      requestBody:
        description: provide valid Request Body here
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddEntities'
          
          
      responses:
        '200':
          description: sucessfully created entity
        '401':
          description: user unauthorized to create new entity
    put:
      tags:
        - Entity
      summary: This API is used for update of entity details for RBAC, with this user can update entities for management
      parameters:
        - name: bearer
          in: header
          description: provide valid JWT token here
          schema:
            type: string
        - name: entityId
          in: query
          description: provide valid entity Ids
          schema:
            type: string
      requestBody:
        description: provide valid Request Body here
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddEntities'
          
      responses:
        '200':
          description: sucessfully updated entity
        '401':
          description: user unauthorized to update  entity
    get:
      tags:
        - Entity
      summary: This API is used to fetch list of entities created
      parameters:
        - name: bearer
          in: header
          description: provide valid JWT token here
          schema:
            type: string
      responses:
        '200':
          description: sucessfully fetched list of entities
    delete:
      tags:
        - Entity
      summary: This API is used to delete entities. By triggering this API user can delete entities that are managed by his persona
      parameters:
        - name: bearer
          in: header
          description: provide valid JWT token here
          schema:
            type: string
        - name: entityId
          in: query
          description: provide valid entity here
          schema:
            type: string
      responses:
        '200':
          description: sucessfully deleted the entity
        '401':
          description: user unauthorized or don't have permission to delete the entity
  /api/v1/persona:
    post:
      tags:
        - Persona
      summary: This API is used to create a new Persona .
      parameters:
        - name: bearer
          in: header
          description: provide valid JWT token here
          schema:
            type: string
      requestBody:
        description: provide valid request body here
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddPersona'
          
           
      responses:
        '200':
          description: Success
    get:
      tags:
        - Persona
      summary: This API is used to fetch the list of persona present in Rego
      parameters:
        - name: bearer
          in: header
          description: provide valid bearer token here
          schema:
            type: string
      responses:
        '200':
          description: sucessfully fetched persona list
        '401':
          description: user unauthorized or user don't have permission to view personas
  /api/v1/privacyTerms/personId:
    get:
      tags:
        - Persona
      summary: This API is used to fetch the privacy terms text from platform IDM service
      parameters:
        - name: bearer
          in: header
          description: provide valid JWT token here
          schema:
            type: string
        - name: personaId
          in: query
          description: provide valid persona Id here
          schema:
            type: string
      responses:
        '200':
          description: sucessfully fetched privacy terms of the given persona
        '401':
          description: user unauthorized or user don't have permission to fetch privacy terms
  /api/v1/seeddata/persona:
    get:
      tags:
        - Persona
      summary: This API is  to create Persona Seed data in Rego Backend so Platform Integration is sucessful
      responses:
        '200':
          description: sucessfully created persona seed data
  /api/v1/seeddata/entity:
    get:
      tags:
        - Persona
      summary: This API is used to created entity seed data for platform IDM integration and RBAC management
      responses:
        '200':
          description: sucessfully created entity details seed data
  /api/v1/seeddata/rights:
    get:
      tags:
        - Persona
      summary: This API is used to created rights seed data for platform IDM integration and RBAC management
      responses:
        '200':
          description: sucessfully created rights details seed data
  /api/v2/seeddata/rights:
    get:
      tags:
        - Persona
      summary: This API is version 2, used to created rights seed data for platform IDM integration and RBAC management
      responses:
        '200':
          description: sucessfully created rights details seed data
  /api/v1/seeddata/assetType/organizationId/{organizationId}:
    get:
      tags:
        - Persona
      summary: This API is used to created asset type seed data for a organization
      parameters:
        - name: bearer
          in: header
          description: provide valid JWT token here
          schema:
            type: string
        - name: organizationId
          in: path
          description: provide valid organizationId here
          required: true
          schema:
            type: string
      responses:
        '200':
          description: sucessfully created asset type details seed data
  /api/v1/seeddata/emailTemplate/organizationId/{organizationId}:
    get:
      tags:
        - Persona
      summary: This API is used to created emailTemplate seed data for a organization
      parameters:
        - name: bearer
          in: header
          description: provide valid JWT token here
          schema:
            type: string
        - name: organizationId
          in: path
          description: provide valid organizationId here
          required: true
          schema:
            type: string
      responses:
        '200':
          description: sucessfully created emailTemplate details seed data
  /api/v1/rights/personaId/{personaId}:
    put:
      tags:
        - Rights
      summary: This API is used to update rights of a persona for RBAC
      parameters:
        - name: bearer
          in: header
          description: provide valid JWT token here
          schema:
            type: string
        - name: personaId
          in: path
          description: provide valid persona Id
          required: true
          schema:
            type: string
      requestBody:
        description: provide valid Request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddRights'
         
      responses:
        '200':
          description: sucessfully updated rights for the given persona
        '401':
          description: user unauthorized or user don't have permission to update rights
  /api/v1/rights/entity/{entityName}/operation/{operation}:
    get:
      tags:
        - Rights
      summary: This API is used to check rights of the user for a particular entity and operation
      parameters:
        - name: bearer
          in: header
          description: provide valid JWT token
          schema:
            type: string
        - name: entityName
          in: path
          description: provide valid entityName
          required: true
          schema:
            type: string
        - name: operation
          in: path
          description: provide valid operation
          required: true
          schema:
            type: string
      responses:
        '200':
          description: sucessfully fetched the rights of persona for the operation and entity
        '401':
          description: user doesn't have permission to perform the operation
  /api/v1/rights:
    get:
      tags:
        - Rights
      summary: This API is used to check right of the user
      parameters:
        - name: bearer
          in: header
          description: provide valid bearer token
          schema:
            type: string
      responses:
        '200':
          description: sucessfully fetched rights of the user
 
components:
  schemas:
    AddEntities:
      type: object
      properties:
        entityName:
          type: string
          nullable: true
        entityType:
          type: string
          nullable: true
        remarks:
          type: string
          nullable: true
      additionalProperties: false
    AddEntityInfo:
      type: object
      properties:
        entityName:
          type: string
          nullable: true
        view:
          type: boolean
        add:
          type: boolean
        edit:
          type: boolean
        delete:
          type: boolean
      additionalProperties: false
    AddPersona:
      type: object
      properties:
        orgTypeId:
          type: string
          nullable: true
        personaId:
          type: string
          nullable: true
        personaName:
          type: string
          nullable: true
        personaType:
          type: string
          nullable: true
        remarks:
          type: string
          nullable: true
      additionalProperties: false
    AddRights:
      type: object
      properties:
        entities:
          type: array
          items:
            $ref: '#/components/schemas/AddEntityInfo'
          nullable: true
      additionalProperties: false
