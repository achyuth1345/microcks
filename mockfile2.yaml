{
  "openapi": "3.0.1",
  "info": {
    "title": "Email Template Manager API Docs",
    "description": "Email Template Manager API Documentation",
    "version": "v2"
  },
  "servers": [
    {
      "url": "/emailtemplatemanagement"
    }
  ],
  "paths": {
    "/api/v1/template": {
      "post": {
        "tags": [
          "Email"
        ],
        "summary": "This API is used to create a new email template. This email template is used while sending a email technicians and admin",
        "description": "Request Body Description:\r\n\r\n        type: a unique identitfier for each email template . this field value is used for fetching the email template before sending the email for users\r\n        organizationId:  used for organization mapping , each organization can have distinct emiltemplates",
        "parameters": [
          {
            "name": "bearer",
            "in": "header",
            "description": "provide valid JWT token here",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "provide valid Request Body",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddEmailTemplate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AddEmailTemplate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AddEmailTemplate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "sucessfully created a new email template"
          },
          "400": {
            "description": "provide vaid request body"
          },
          "401": {
            "description": "unauthorized access or user doesnt have permission to create email templates"
          }
        }
      },
      "put": {
        "tags": [
          "Email"
        ],
        "summary": "This API is used to updte a email template. This new email template details will be used while sending a email technicians and admin",
        "description": "Request Body Description:\r\n\r\n        type: a unique identitfier for each email template . this field value is used for fetching the email template before sending the email for users\r\n        organizationId:  used for organization mapping , each organization can have distinct emiltemplates",
        "parameters": [
          {
            "name": "bearer",
            "in": "header",
            "description": "provide valid JWT token here",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "templateId",
            "in": "query",
            "description": "provide valid template Id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "provide valid Request Body",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddEmailTemplate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AddEmailTemplate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AddEmailTemplate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "sucessfully created a new email template"
          },
          "404": {
            "description": "template not found for the Id"
          },
          "400": {
            "description": "provide vaid request body"
          },
          "401": {
            "description": "unauthorized access or user doesnt have permission to create email templates"
          }
        }
      }
    },
    "/api/v1/templates": {
      "get": {
        "tags": [
          "Email"
        ],
        "summary": "This API is used to fetch the list of templates for a particular organization",
        "parameters": [
          {
            "name": "bearer",
            "in": "header",
            "description": "provide valid JWT token here",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "sucessfullly fetched all the list of template details"
          },
          "404": {
            "description": "templates not found for the organization"
          },
          "401": {
            "description": "unauthorized access or user dont have permission to fetch list of templates"
          }
        }
      }
    },
    "/api/v1/template/templateId/{templateId}": {
      "get": {
        "tags": [
          "Email"
        ],
        "summary": "This API is used to fetch template details by Id",
        "parameters": [
          {
            "name": "bearer",
            "in": "header",
            "description": "provide valid JWT token here",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "templateId",
            "in": "path",
            "description": "provide valid templateId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "sucesssfully fetched the template details"
          },
          "404": {
            "description": "template not found for given Id"
          },
          "401": {
            "description": "unauthorized access"
          }
        }
      },
      "delete": {
        "tags": [
          "Email"
        ],
        "summary": "This API is used for Deleting template information for given id",
        "parameters": [
          {
            "name": "bearer",
            "in": "header",
            "description": "provide valid JWT token here",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "templateId",
            "in": "path",
            "description": "provide valid template Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "sucessfully deleted template"
          },
          "404": {
            "description": "template not found for the given Id"
          },
          "401": {
            "description": "unauthorized access or user doesn't have permission to delete the template"
          }
        }
      }
    },
    "/api/v1/send": {
      "post": {
        "tags": [
          "Email"
        ],
        "summary": "This email is to send email to users",
        "description": "Request Body Description\r\n\r\n\r\n        attachmemts : this fields accepts the attachements in the form of SAS URL strings .",
        "parameters": [
          {
            "name": "bearer",
            "in": "header",
            "description": "provide valid JWT token here",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "provide valid Request Body",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SendMailRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SendMailRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SendMailRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "sucessfully sent the emails to the users"
          },
          "400": {
            "description": "please provide valid request body"
          },
          "401": {
            "description": "unauthorized access or user dont have permission to send emails"
          }
        }
      }
    },
    "/live": {
      "get": {
        "tags": [
          "SystemCheck"
        ],
        "summary": "Check if the API is Live",
        "parameters": [
          {
            "name": "bearer",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AddEmailTemplate": {
        "type": "object",
        "properties": {
          "subject": {
            "type": "string",
            "nullable": true
          },
          "body": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "tenantUniqueIdentifier": {
            "type": "string",
            "nullable": true
          },
          "organizationId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AddressCollection": {
        "type": "object",
        "properties": {
          "address": {
            "type": "string",
            "nullable": true
          },
          "displayName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SendMailRequest": {
        "type": "object",
        "properties": {
          "tenantUniqueIdentifier": {
            "type": "string",
            "nullable": true
          },
          "to": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AddressCollection"
            },
            "nullable": true
          },
          "cc": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "bcc": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "context": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          },
          "attachments": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    }
  }
}
