openapi: 3.0.1
info:
  title: Organization Manager API Docs
  description: Organization Manager API Documentation
  version: v2
servers:
  - url: /organizationmanagement
paths:
  /api/v1/cargas/createapikey:
    post:
      tags:
        - Cargas
      summary: This APi is used to input a ERP (cargas) details into Rego Backend
      description: "Request Body description:\r\n\r\n\r\n        CargasUrl: Url for Cargas Integration\r\n        ApiKey: authentication token for Cargas"
      parameters:
        - name: bearer
          in: header
          description: provide valid JWT token here
          schema:
            type: string
      requestBody:
        description: provide valid Request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CargasApiKey'
         
      responses:
        '200':
          description: sucessfully entered the Cargas information into rego system
        '401':
          description: unauthorized access or user dont have permission to add cargas information
  /api/v1/cargas:
    put:
      tags:
        - Cargas
      summary: This API is used to edit the Cargas details for the organization . This APi also allows user to update the Since Date so that the Cargas sync cycle which would be one day could be restarted from 2010
      parameters:
        - name: bearer
          in: header
          description: provide valid JWT token here
          schema:
            type: string
        - name: providerId
          in: query
          description: provide valid provider Id
          schema:
            type: string
        - name: changeSinceDate
          in: query
          description: provide boolean value true or false
          schema:
            type: boolean
      requestBody:
        description: provide valid Request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CargasApiKey'
          
      responses:
        '200':
          description: sucessfully updated the cargas details
        '401':
          description: user dont have permission to update the extrnal provider details
        '404':
          description: provider Id not found
    get:
      tags:
        - Cargas
      summary: This APi is used to fetch the External Provider details
      parameters:
        - name: bearer
          in: header
          description: provide valid JWT token here
          schema:
            type: string
      responses:
        '200':
          description: sucessfully fecthed the external provider details
        '401':
          description: user dont have permission to fetch the external provider details
        '404':
          description: External Provider details not found
  /api/v1/counties:
    get:
      tags:
        - Organization
      summary: This API is used to fetch Normalized the List of Countries names in the World
      parameters:
        - name: bearer
          in: header
          schema:
            type: string
      responses:
        '200':
          description: sucessfully fecthed Country details
        '401':
          description: user unauthorized
  /api/v1/states:
    get:
      tags:
        - Organization
      summary: This API is used to fetch Normalized the List of states names in the World for a given country
      parameters:
        - name: bearer
          in: header
          schema:
            type: string
        - name: countryId
          in: query
          description: provide valid countryId
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: sucessfully fecthed state details
        '401':
          description: user unauthorized
  /api/v1/cities:
    get:
      tags:
        - Organization
      summary: This API is used to fetch Normalized the List of cities names in the World for a given state
      parameters:
        - name: bearer
          in: header
          schema:
            type: string
        - name: stateId
          in: query
          description: provide valid stateId
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: sucessfully fecthed city details
        '401':
          description: user unauthorized
  /api/v1/organization/types:
    get:
      tags:
        - Organization
      summary: This APi is sued to get the ist of Organization types
      parameters:
        - name: bearer
          in: header
          schema:
            type: string
      responses:
        '200':
          description: sucessfully fetched the list of organization types
        '401':
          description: unauthorized access or user dont have access to fetch the organization types list
  /api/v1/organization:
    post:
      tags:
        - Organization
      summary: This api is used to Create a new Organization
      description: "Request body description:\r\n        \r\n        \r\n        parentOrganizationID:  used to find out the heirarchy of the organization structure\r\n        organizationType: used to assignt he organization a type"
      parameters:
        - name: bearer
          in: header
          description: provide valid JWT token here
          schema:
            type: string
      requestBody:
        description: provide vaid Request Body here
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrganizationRequests'
         
      responses:
        '200':
          description: sucessfully created organization
        '400':
          description: provide valid organization detals in request body
        '401':
          description: ''
    get:
      tags:
        - Organization
      summary: This API is used to fecth list of all the organizations. when triggered by user the Rego Backend requets platform and fetches all the child organizations of the user's organization.
      parameters:
        - name: bearer
          in: header
          description: provide valid JWT token here
          schema:
            type: string
        - name: tenantUniqueIdentifier
          in: query
          description: provide tenant details of the organization
          schema:
            type: string
      responses:
        '200':
          description: sucessfullt fetched the list of organiztions
        '401':
          description: unauthorized access or user dont have permission to fetch the organization list
        '404':
          description: organizations list not found
  /api/v1/organization/uploadicon:
    put:
      tags:
        - Organization
      summary: This APi is used  upload organization images
      parameters:
        - name: bearer
          in: header
          description: provide valid JWT token here
          schema:
            type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                files:
                  type: array
                  items:
                    type: string
                    format: binary
            encoding:
              files:
                style: form
      responses:
        '200':
          description: Success
        '401':
          description: unauthorized access or user dont have access to upload images to organization
  /api/v1/organization/deleteicon:
    delete:
      tags:
        - Organization
      summary: This API is used to Delete organization images .
      parameters:
        - name: bearer
          in: header
          description: provide valid JWT token details
          schema:
            type: string
      responses:
        '200':
          description: sucessfully deleted organization images
        '401':
          description: unauthorized access or users dont have access to delete the files
        '404':
          description: images not found for the organization
  /api/v1/organization/geticon:
    get:
      tags:
        - Organization
      summary: This API is used to fetch the SAS UEL of the organizatio icon
      parameters:
        - name: bearer
          in: header
          description: provide valid JWT token here
          schema:
            type: string
      responses:
        '200':
          description: sucessfully fetched the organization Logo SAS URL
        '401':
          description: unauthorized access or user dont have acces to fetch the organization logo
        '404':
          description: Organization logo not found
  /api/v1/organization/orgId/{orgId}:
    put:
      tags:
        - Organization
      summary: This API allows user to update th organization details of a particular organization by providing the OrgId in URL
      parameters:
        - name: bearer
          in: header
          description: povide valid JWT token here
          schema:
            type: string
        - name: orgId
          in: path
          description: provide valid organization Id here
          required: true
          schema:
            type: string
      requestBody:
        description: provide valid Request Body here
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrganizationRequests'
         
      responses:
        '200':
          description: organization details updated sucessfully
        '401':
          description: unauthorized access or user dont have access to update organization details
        '404':
          description: organization not found
    get:
      tags:
        - Organization
      summary: This APi is used to fetch organization details of one organization by providing the OrgId
      parameters:
        - name: bearer
          in: header
          description: provide valid JWT token
          schema:
            type: string
        - name: orgId
          in: path
          description: provide Valid OrgId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: sucessfully fetched organization details for the Id
        '401':
          description: unauthorized access or user dont have permission to fetch the organization details
        '404':
          description: organzation not found
    delete:
      tags:
        - Organization
      summary: This API is used to delete a organization based on the OrgId
      parameters:
        - name: bearer
          in: header
          description: provide valid JWT token
          schema:
            type: string
        - name: orgId
          in: path
          description: provide Valid OrgId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: sucessfully deleted organization details for the Id
        '401':
          description: unauthorized access or user dont have permission to delete the organization details
        '404':
          description: organzation not found

components:
  schemas:
    CargasApiKey:
      type: object
      properties:
        cargasUrl:
          type: string
          nullable: true
        apiKey:
          type: string
          nullable: true
      additionalProperties: false
    CreateOrganizationRequests:
      type: object
      properties:
        organizationName:
          type: string
          nullable: true
        organizationType:
          type: string
          nullable: true
        organizationTypeId:
          type: string
          nullable: true
        tenantUniqueIdentifier:
          type: string
          nullable: true
        alias:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        parentOrganizationId:
          type: string
          nullable: true
        address1:
          type: string
          nullable: true
        address2:
          type: string
          nullable: true
        country:
          type: string
          nullable: true
        state:
          type: string
          nullable: true
        city:
          type: string
          nullable: true
        zipcode:
          type: string
          nullable: true
        ownEmail:
          type: string
          nullable: true
        ownPhoneNumber:
          type: string
          nullable: true
        ownAlternateNumber:
          type: string
          nullable: true
        latitude:
          type: number
          format: double
        longitude:
          type: number
          format: double
      additionalProperties: false
