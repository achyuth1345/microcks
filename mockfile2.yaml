openapi: 3.0.1
info:
  title: Customer Manager API Docs
  description: Customer Manager API Documentation
  version: v2
servers:
  - url: /customermanagement
paths:
  /api/v1/customer:
    post:
      tags:
        - Customers
      summary: This API is used to create a new customer with multiple address locations .
      description: "Request Body:\r\n\r\n        \r\n        \r\n        accountNo:  a Unique identifier for the customer in a particular organization\r\n        address:  a list of JSON where each JSON represents one particular location for a customer\r\n        customerType: a enum with two values Business or Residential"
      parameters:
        - name: bearer
          in: header
          description: provide valid JWT token here
          schema:
            type: string
      requestBody:
        description: provide valid Request Body here
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddCustomerInfo'
         
      responses:
        '200':
          description: sucessfully created a customer
        '400':
          description: request body is invalid , provide valid request body
        '401':
          description: unauthorized acccess or use doesnt have permission to create a customer
  /api/v1/customer/customerId/{customerId}:
    put:
      tags:
        - Customers
      summary: This API is sued to update the details of a customer by providing a customerId.
      description: "Request Body:\r\n\r\n        \r\n        \r\n        accountNo:  a Unique identifier for the customer in a particular organization\r\n        address:  a list of JSON where each JSON represents one particular location for a customer\r\n        customerType: a enum with two values Business or Residential"
      parameters:
        - name: bearer
          in: header
          description: provide valid JWT token here
          schema:
            type: string
        - name: customerId
          in: path
          description: provide valid customerId
          required: true
          schema:
            type: string
      requestBody:
        description: provide valid Request Body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddCustomerInfo'
         
      responses:
        '200':
          description: sucessfully updated the customer details
        '400':
          description: request body not valid
        '401':
          description: unauthorized access or user doesnt have access to update the customer details
        '404':
          description: customer with provided id not found
    get:
      tags:
        - Customers
      summary: This API allows user to fetch the details of a customer by providing the customerId
      parameters:
        - name: bearer
          in: header
          description: provide valid JWT token here
          schema:
            type: string
        - name: customerId
          in: path
          description: provide valid customerId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: sucessfully fetched customer details
        '401':
          description: unauthorized user or user doent have acces to fetch the customer details
        '404':
          description: customer with Id not found
    delete:
      tags:
        - Customers
      summary: This API is used to delete a customer by Id.
      parameters:
        - name: bearer
          in: header
          description: bearer
          schema:
            type: string
        - name: customerId
          in: path
          description: customerId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: customer deleted sucessfully
        '401':
          description: unauthrized accesss or user doesnt have permisssion to delete the customer
        '404':
          description: customer not found for the Id
  /api/v2/customer/customerId/{customerId}:
    put:
      tags:
        - Customers
      summary: This is a Version 2 api for updtion of customer details where it only updates the customer details and address details remainas the same as before
      description: "Request Body:\r\n\r\n        \r\n        \r\n        accountNo:  a Unique identifier for the customer in a particular organization\r\n        customerType: a enum with two values Business or Residential"
      parameters:
        - name: bearer
          in: header
          description: provide valid JWT token here
          schema:
            type: string
        - name: customerId
          in: path
          description: provide valid customerId
          required: true
          schema:
            type: string
      requestBody:
        description: provide valid Request Body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EditCustomerInfo'
       
      responses:
        '200':
          description: sucessfully updated the customer details
        '400':
          description: request body not valid
        '401':
          description: unauthorized access or user doesnt have access to update the customer details
        '404':
          description: customer with provided id not found
    get:
      tags:
        - Customers
      summary: This API allows user to fetch the details of a customer by providing the customerId
      parameters:
        - name: bearer
          in: header
          description: provide valid JWT token here
          schema:
            type: string
        - name: customerId
          in: path
          description: provide valid customerId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: sucessfully fetched customer details
        '401':
          description: unauthorized user or user doent have acces to fetch the customer details
        '404':
          description: customer with Id not found
  /api/v2/addaddress/customerId/{customerId}:
    post:
      tags:
        - Customers
      summary: This is a Version 2 API for creating  new address in a customer . by triggering this API user will be able to create one address in a particular customer which doesn't conflict with any other address in that customer
      parameters:
        - name: bearer
          in: header
          description: provide valid JWT token here
          schema:
            type: string
        - name: customerId
          in: path
          description: provide valid customerId
          required: true
          schema:
            type: string
      requestBody:
        description: provide valid Request Body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddAddress'
         
      responses:
        '200':
          description: sucessfully created the address details
        '400':
          description: request body not valid
        '401':
          description: unauthorized access or user doesnt have access to add the address details
        '404':
          description: customer with provided id not found
  /api/v2/deleteaddress/customerId/{customerId}/siteId/{siteId}:
    delete:
      tags:
        - Customers
      summary: This is a version2 API for deleting a address from a particular customer . by triggering this API user should be able to delete only one address from list of address of a customer.
      parameters:
        - name: bearer
          in: header
          description: provide valid JWT token here
          schema:
            type: string
        - name: customerId
          in: path
          description: provide valid customerId
          required: true
          schema:
            type: string
        - name: siteId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: sucessfully deleted the address details
        '401':
          description: unauthorized access or user doesnt have access to delete the address details
        '404':
          description: customer with provided id not found
  /api/v2/updateAddress/Customer/{customerId}/siteId/{siteId}:
    put:
      tags:
        - Customers
      summary: This is a version2 API for updating a address from a particular customer . by triggering this API user should be able to update only one address from list of address of a customer.
      parameters:
        - name: bearer
          in: header
          description: provide valid JWT token here
          schema:
            type: string
        - name: customerId
          in: path
          description: provide valid customerId
          required: true
          schema:
            type: string
        - name: siteId
          in: path
          description: provide valid siteId
          required: true
          schema:
            type: string
      requestBody:
        description: provide valid Request Body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddAddress'
         
      responses:
        '200':
          description: sucessfully update the address details
        '401':
          description: unauthorized access or user doesnt have access to update the address details
        '404':
          description: customer with provided id not found
  /api/v1/customer/type/{customerType}/filter/{filter}:
    get:
      tags:
        - Customers
      summary: This API is used to fetch a list of all the customers with search text. By triggering thi API user can get list of all the customer and their address
      parameters:
        - name: bearer
          in: header
          description: provide valid JWT token here
          schema:
            type: string
        - name: customerType
          in: path
          description: provide the customerType filter values can be Residential, Business or All
          required: true
          schema:
            type: string
        - name: filter
          in: path
          description: Provide search text here , api searches the match in accountNo, address, company and email
          required: true
          schema:
            type: string
      responses:
        '200':
          description: sucessfully fetched the customer list
        '401':
          description: unauthorized access or user doesnt have permission to get customer list
        '404':
          description: customers not found in the user's organizations
  /api/v2/customer/filter:
    post:
      tags:
        - Customers
      summary: This is a Versioni 2 API to get list of customers and address batch wise. By providing batch size and page number user can fetch only those customers and searching is also provided. Searching can also be done using the same API
      parameters:
        - name: bearer
          in: header
          description: provide valid JWT token here
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/filterCustomer'
         
      responses:
        '200':
          description: sucessfully fetched the customer list
        '401':
          description: unauthorized user or user doesnt have access to feth the customer list
        '404':
          description: customer not found in the search result
  /api/v2/customer/{customerId}/getAddress/filter:
    post:
      tags:
        - Customers
      summary: This API is used to fetchg the list of address of a particular customer batch wise.
      parameters:
        - name: bearer
          in: header
          description: provide valid JWT token here
          schema:
            type: string
        - name: customerId
          in: path
          description: provide valid customer Id
          required: true
          schema:
            type: string
      requestBody:
        description: provide the valid request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/filterCustomer'
      
      responses:
        '200':
          description: sucessfully fetch the list of adddress for the given customerId
        '401':
          description: user unauthorized or user dont have access to fetch list of address for the customer
        '404':
          description: customer not found for the given customerId
  /api/v2/bulkUpload/customer:
    post:
      tags:
        - Customers
      summary: This API allows user to upload a csv file to initiate a bulk upload job which reads all the rows from the csv and starts creating  customers
      parameters:
        - name: bearer
          in: header
          description: provide valid JWT token here
          schema:
            type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                fileSize:
                  type: string
                totalRecords:
                  type: string
                filename:
                  type: string
                username:
                  type: string
                file:
                  type: string
                  format: binary
            encoding:
              fileSize:
                style: form
              totalRecords:
                style: form
              filename:
                style: form
              username:
                style: form
              file:
                style: form
      responses:
        '200':
          description: sucessfully uploaded the CSV file
        '400':
          description: provide valid bulk upload file details
        '401':
          description: user unauthorized or user cannot upload CSV file
  /api/v2/bulkUpload/customerfailrecords:
    post:
      tags:
        - Customers
      summary: This API allows user to download a csv file which contains all the failed records of the uploaded CSV
      parameters:
        - name: bearer
          in: header
          description: bearer
          schema:
            type: string
      requestBody:
        description: request body to fetch the bulk upload request details vatch wise
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/filterCsv'
       
      responses:
        '200':
          description: sucessfully fetched all the bulk requests batch wise
        '401':
          description: unauthorized user or user doesnt have permission to view all the bulk job requests
        '404':
          description: no bulk job requests found
  /api/v2/bulkUpload/customer/getTemplate:
    get:
      tags:
        - Customers
      summary: This API is used to download the template CSV . User should use this template to add the customer information in each row and can upload the updated file for triggering bulk upload job
      parameters:
        - name: bearer
          in: header
          description: provide valid JWT token here
          schema:
            type: string
      responses:
        '200':
          description: sucessfully fetched the CSV file
        '401':
          description: unauthorized access
        '404':
          description: file not found
  /api/v1/customer/customerId/{customerId}/approve:
    put:
      tags:
        - Customers
      summary: This API is used to approve the status of the customer
      parameters:
        - name: bearer
          in: header
          description: bearer
          schema:
            type: string
        - name: customerId
          in: path
          description: customerId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: sucessfully approved the customer
        '401':
          description: user unauthorized or user doesn't have permission to edit the customer details
        '404':
          description: customer not found for the given Id
  /api/v1/customer/accountNo/{accountNo}/isapproved:
    get:
      tags:
        - Customers
      summary: This API is used to check if the customer is approved based on the accountNo
      parameters:
        - name: bearer
          in: header
          description: provide valid JWT token here
          schema:
            type: string
        - name: accountNo
          in: path
          description: provide valid accountNo
          required: true
          schema:
            type: string
      responses:
        '200':
          description: sucessfully fetched the status of the customer for given accountNo
        '401':
          description: user unauthorized or user doesn't have access to check the status of customer
        '404':
          description: customer not found for given account number
  /api/v2/customerId/{customerId}/active:
    put:
      tags:
        - Customers
      summary: This API is used to make the customer active/Inactive
      parameters:
        - name: bearer
          in: header
          description: provide valid JWT token here
          schema:
            type: string
        - name: customerId
          in: path
          required: true
          schema:
            type: string
        - name: active
          in: query
          description: provide boolean true or false here . True for activaing the customer false for inactivating the customer
          schema:
            type: boolean
      responses:
        '200':
          description: sucessfully updted the customer
        '401':
          description: user unauthorized or user doesn't have permission to update the customer
        '404':
          description: customer not found for the customerId

components:
  schemas:
    AddAddress:
      type: object
      properties:
        siteId:
          type: string
          nullable: true
        siteName:
          type: string
          nullable: true
        siteType:
          type: string
          nullable: true
        lastName:
          type: string
          nullable: true
        firstName:
          type: string
          nullable: true
        gasEquipPresent:
          type: boolean
        country:
          type: string
          nullable: true
        address:
          type: string
          nullable: true
        state:
          type: string
          nullable: true
        city:
          type: string
          nullable: true
        zipCode:
          type: string
          nullable: true
        phone:
          type: string
          nullable: true
        emailAddress:
          type: string
          nullable: true
      additionalProperties: false
    AddCompany:
      type: object
      properties:
        name:
          type: string
          nullable: true
        emailAddress:
          type: string
          nullable: true
      additionalProperties: false
    AddCustomerInfo:
      type: object
      properties:
        tenantId:
          type: string
          nullable: true
        accountNo:
          type: string
          nullable: true
        firstName:
          type: string
          nullable: true
        lastName:
          type: string
          nullable: true
        emailAddress:
          type: string
          nullable: true
        phone:
          type: string
          nullable: true
        customerType:
          type: string
          nullable: true
        company:
          $ref: '#/components/schemas/AddCompany'
        address:
          type: array
          items:
            $ref: '#/components/schemas/AddAddress'
          nullable: true
        inspectionReason:
          type: string
          nullable: true
        isActive:
          type: boolean
      additionalProperties: false
    EditCustomerInfo:
      type: object
      properties:
        tenantId:
          type: string
          nullable: true
        accountNo:
          type: string
          nullable: true
        firstName:
          type: string
          nullable: true
        lastName:
          type: string
          nullable: true
        emailAddress:
          type: string
          nullable: true
        phone:
          type: string
          nullable: true
        customerType:
          type: string
          nullable: true
        company:
          $ref: '#/components/schemas/AddCompany'
        inspectionReason:
          type: string
          nullable: true
        isActive:
          type: boolean
      additionalProperties: false
    filterCsv:
      type: object
      properties:
        pageNumber:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        filename:
          type: string
          nullable: true
      additionalProperties: false
    filterCustomer:
      type: object
      properties:
        pageNumber:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        searchTxt:
          type: string
          nullable: true
        sortBy:
          type: string
          nullable: true
        isAscending:
          type: boolean
        customerType:
          type: string
          nullable: true
        active:
          type: string
          nullable: true
      additionalProperties: false
